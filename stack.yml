version: '3.8'

services:
  api-astrologica:
    image: elgrancarlo/api-astrologica:latest
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      labels:
        # 1. Habilita o Traefik e especifica a rede de comunicação
        - "traefik.enable=true"
        - "traefik.docker.network=network_public"

        # 2. Define o Router com um nome único e regras claras
        - "traefik.http.routers.api-astro-router.rule=Host(`api.astrologia.illumiai.com`)"
        - "traefik.http.routers.api-astro-router.entrypoints=websecure"
        - "traefik.http.routers.api-astro-router.tls.certresolver=letsencrypt"
        
        # 3. Vincula explicitamente o Router a um Serviço nomeado (CRUCIAL!)
        - "traefik.http.routers.api-astro-router.service=api-astro-svc"

        # 4. Define o Serviço nomeado e especifica a porta do contêiner
        - "traefik.http.services.api-astro-svc.loadbalancer.server.port=8000"

    networks:
      - network_public

networks:
  network_public:
    external: true 